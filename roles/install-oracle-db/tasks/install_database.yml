---
# 
# installation des binaires ORACLE
#

  - name: Création du répertoire oracle
    file: dest={{ item }} mode=775 owner=oracle group=oinstall state=directory recurse=yes
    with_items:
      - "{{ oracle_base }}"
      - "{{ oracle_inventory }}"
      - "{{ oracle_home }}"
      - "{{ oracle_sources }}"
    tags: createdir

# su - oracle
# mkdir -p /u01/app/oracle/product/19.0.0/dbhome_1
# cd /u01/app/oracle/product/19.0.0/dbhome_1
# unzip -q /tmp/db_home.zip
# cd /u01/app/oracle/product/19.0.0/dbhome_1
# ./runInstaller

  - name: vérification de l espace disque disponible sur oracle_base
    action: shell df -P {{ oracle_base }} | awk 'END { print $4 }'
    register: u01size
    failed_when: u01size.stdout|int < {{ u01_free_space_gb }} * 1024 * 1024
    tags: diskfreespace

  - name: vérification de l espace disque disponible sur /tmp
    action: shell df -P /tmp | awk 'END { print $4 }'
    register: tmpsize
    failed_when: tmpsize.stdout|int < {{ tmp_free_space_gb }} * 1024 * 1024
    tags: diskfreespace

  - name: Vérifier si une installation existe ...
    shell: grep "{{ oracle_home  }}" "{{ oracle_inventory }}/ContentsXML/inventory.xml" | wc -l
    register: checkdbswinstall
    failed_when: checkdbswinstall.stdout != "0"
    tags: checkifexists

  - name: Extraction des binaires Oracle
    unarchive: src={{ oracle_sources }}/LINUX.X64_193000_db_home.zip  dest={{ oracle_home }}
    sudo: yes
    sudo_user: oracle
    tags: transfert

#  - name: Linux 7 - application du pacth 19404309 pour installer 11.2 sur Linux 7
#    # https://updates.oracle.com/Orion/Services/download?type=readme&aru=17984752
#    # cela consiste à copier le fichier cvu_prereq.xml dans le répertoire d'install
#    copy: src=cvu_prereq.xml dest={{ oracle_sources }}/database/stage/cvu owner={{ db_user }} group={{ oracle_group }} mode=644
#    sudo: yes
#    sudo_user: oracle
#    tags: patch_p19404309
#    when: ansible_distribution_major_version == '7' and db_version == "11.2.0.4"

  - name: Copie du fichier de réponse pour installation silencieuse
    template: src=db_install_{{ db_version }}.j2 dest={{ oracle_sources }}/{{ db_response_file }}
    sudo: yes
    sudo_user: oracle
    tags: responsefile

  - name: Création du script d installation silencieuse
    template: src=run_db_install.sh.j2 dest={{ oracle_sources }}/run_db_install.sh mode=755
    sudo: yes
    sudo_user: oracle
    tags: responsefile

  - name: Installation des binaires Oracle
    shell: "{{ oracle_sources }}/run_db_install.sh"
    sudo: yes
    sudo_user: oracle
    register: oradbinstall
    tags: orainstall

  - debug: var=oradbinstall.stdout_lines
    # with_items: oradbinstall.results
    tags: orainstall

  - name: Vérification de l existance du fichier orainstRoot.sh
    stat: path="{{ oracle_inventory }}/orainstRoot.sh"
    register: orainstRoot

  - name: Exécution du script orainstRoot.sh
    shell: "{{ oracle_inventory }}/orainstRoot.sh"
    sudo: yes
    sudo_user: root
    when: orainstRoot.stat.exists
    tags: runroot

  - name: Exécution du script root.sh
    shell: "{{ oracle_home }}/root.sh"
    sudo: yes
    sudo_user: root
    tags: runroot

  - name: Résultat de l installation via OPatch
    shell: "{{ oracle_home }}/OPatch/opatch lsinventory"
    sudo: yes
    sudo_user: oracle
    register: opatchls
    tags: opatch

  - debug: var=opatchls.stdout_lines
    # with_items: opatchls.results
    tags: opatch

  # suppression des binaires, du fichier de réponse et du script d'install
#  - name: suppression du repertoire des fichiers decompressés
#    file: path={{ oracle_sources }}/database state=absent
#
#  - name: suppression du fichier de réponse
#    file: path={{ oracle_sources }}/{{ db_response_file }} state=absent
#
#  - name: suppression du script d'installation
#    file: path={{ oracle_sources }}/run_db_install.sh state=absent

